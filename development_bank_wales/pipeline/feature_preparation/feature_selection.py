# File: development_bank_wales/pipeline/feature_preparation/feature_selection.py
"""Select features for different predictive models (differnet categories)."""

# ---------------------------------------------------------------------------------


roof_features = [
    "CURRENT_ENERGY_RATING",
    "POTENTIAL_ENERGY_RATING",
    "CURRENT_ENERGY_EFFICIENCY",
    "PROPERTY_TYPE",
    "BUILT_FORM",
    "ENERGY_CONSUMPTION_CURRENT",
    "CO2_EMISSIONS_CURRENT",
    "CO2_EMISS_CURR_PER_FLOOR_AREA",
    "LIGHTING_COST_CURRENT",
    "LIGHTING_COST_POTENTIAL",
    "HEATING_COST_CURRENT",
    "HEATING_COST_POTENTIAL",
    "HOT_WATER_COST_CURRENT",
    "HOT_WATER_COST_POTENTIAL",
    "TOTAL_FLOOR_AREA",
    "MAINS_GAS_FLAG",
    "FLOOR_LEVEL",
    "MAIN_HEATING_CONTROLS",
    "EXTENSION_COUNT",
    "NUMBER_HABITABLE_ROOMS",
    "NUMBER_HEATED_ROOMS",
    "ROOF_ENERGY_EFF",
    "WIND_TURBINE_COUNT",
    "FLOOR_HEIGHT",
    "PHOTO_SUPPLY",
    "SOLAR_WATER_HEATING_FLAG",
    "LOCAL_AUTHORITY_LABEL",
    "CONSTRUCTION_AGE_BAND",
    "TENURE",
    "N_SAME_UPRN_ENTRIES",
    "DIFF_POT_ENERGY_RATING",
    "MAINHEAT_RECOMMENDATION",
    "HAS_ANY_RECOM",
    "ROOF TYPE",
    "LOFT INSULATION [in mm]",
    "ROOF THERMAL TRANSMIT",
    "ROOF INSULATION",
    "WALL TYPE",
    "WALLS THERMAL TRANSMIT",
    "WALLS INSULATION",
    "FLOOR TYPE",
    "FLOOR THERMAL TRANSMIT",
    "FLOOR INSULATION",
    "TOTAL_ENERGY_EFF_NUM",
    "WALLS_ENERGY_EFF_SCORE",
    "ROOF_ENERGY_EFF_SCORE",
    "WALLS_ENERGY_EFF_SCORE",
    "MAINHEAT_ENERGY_EFF_SCORE",
    "HOT_WATER_ENERGY_EFF_SCORE",
    "LIGHTING_ENERGY_EFF_SCORE",
    "FLOOR_ENERGY_EFF_SCORE",
    "WINDOWS_ENERGY_EFF_SCORE",
    # "ROOF_UPGRADABILITY",
]

walls_features = roof_features = [
    "CURRENT_ENERGY_RATING",
    "POTENTIAL_ENERGY_RATING",
    "CURRENT_ENERGY_EFFICIENCY",
    "PROPERTY_TYPE",
    "BUILT_FORM",
    "ENERGY_CONSUMPTION_CURRENT",
    "CO2_EMISSIONS_CURRENT",
    "CO2_EMISS_CURR_PER_FLOOR_AREA",
    "LIGHTING_COST_CURRENT",
    "LIGHTING_COST_POTENTIAL",
    "HEATING_COST_CURRENT",
    "HEATING_COST_POTENTIAL",
    "HOT_WATER_COST_CURRENT",
    "HOT_WATER_COST_POTENTIAL",
    "TOTAL_FLOOR_AREA",
    "MAINS_GAS_FLAG",
    "FLOOR_LEVEL",
    "MAIN_HEATING_CONTROLS",
    "EXTENSION_COUNT",
    "NUMBER_HABITABLE_ROOMS",
    "NUMBER_HEATED_ROOMS",
    "ROOF_ENERGY_EFF",
    "WIND_TURBINE_COUNT",
    "FLOOR_HEIGHT",
    "PHOTO_SUPPLY",
    "SOLAR_WATER_HEATING_FLAG",
    "LOCAL_AUTHORITY_LABEL",
    "CONSTRUCTION_AGE_BAND",
    "TENURE",
    "N_SAME_UPRN_ENTRIES",
    "DIFF_POT_ENERGY_RATING",
    "MAINHEAT_RECOMMENDATION",
    "HAS_ANY_RECOM",
    "ROOF TYPE",
    "LOFT INSULATION [in mm]",
    "ROOF THERMAL TRANSMIT",
    "ROOF INSULATION",
    "WALL TYPE",
    "WALLS THERMAL TRANSMIT",
    "WALLS INSULATION",
    "FLOOR TYPE",
    "FLOOR THERMAL TRANSMIT",
    "FLOOR INSULATION",
    "TOTAL_ENERGY_EFF_NUM",
    "WALLS_ENERGY_EFF_SCORE",
    "ROOF_ENERGY_EFF_SCORE",
    "WALLS_ENERGY_EFF_SCORE",
    "MAINHEAT_ENERGY_EFF_SCORE",
    "HOT_WATER_ENERGY_EFF_SCORE",
    "LIGHTING_ENERGY_EFF_SCORE",
    "FLOOR_ENERGY_EFF_SCORE",
    "WINDOWS_ENERGY_EFF_SCORE",
]

floor_features = [
    "CURRENT_ENERGY_RATING",
    "POTENTIAL_ENERGY_RATING",
    "CURRENT_ENERGY_EFFICIENCY",
    "PROPERTY_TYPE",
    "BUILT_FORM",
    "ENERGY_CONSUMPTION_CURRENT",
    "CO2_EMISSIONS_CURRENT",
    "CO2_EMISS_CURR_PER_FLOOR_AREA",
    "LIGHTING_COST_CURRENT",
    "LIGHTING_COST_POTENTIAL",
    "HEATING_COST_CURRENT",
    "HEATING_COST_POTENTIAL",
    "HOT_WATER_COST_CURRENT",
    "HOT_WATER_COST_POTENTIAL",
    "TOTAL_FLOOR_AREA",
    "MAINS_GAS_FLAG",
    "FLOOR_LEVEL",
    "MAIN_HEATING_CONTROLS",
    "EXTENSION_COUNT",
    "NUMBER_HABITABLE_ROOMS",
    "NUMBER_HEATED_ROOMS",
    "ROOF_ENERGY_EFF",
    "WIND_TURBINE_COUNT",
    "FLOOR_HEIGHT",
    "PHOTO_SUPPLY",
    "SOLAR_WATER_HEATING_FLAG",
    "LOCAL_AUTHORITY_LABEL",
    "CONSTRUCTION_AGE_BAND",
    "TENURE",
    "N_SAME_UPRN_ENTRIES",
    "DIFF_POT_ENERGY_RATING",
    "MAINHEAT_RECOMMENDATION",
    "HAS_ANY_RECOM",
    "ROOF TYPE",
    "LOFT INSULATION [in mm]",
    "ROOF THERMAL TRANSMIT",
    "ROOF INSULATION",
    "WALL TYPE",
    "WALLS THERMAL TRANSMIT",
    "WALLS INSULATION",
    "FLOOR TYPE",
    "FLOOR THERMAL TRANSMIT",
    "FLOOR INSULATION",
    "TOTAL_ENERGY_EFF_NUM",
    "WALLS_ENERGY_EFF_SCORE",
    "ROOF_ENERGY_EFF_SCORE",
    "WALLS_ENERGY_EFF_SCORE",
    "MAINHEAT_ENERGY_EFF_SCORE",
    "HOT_WATER_ENERGY_EFF_SCORE",
    "LIGHTING_ENERGY_EFF_SCORE",
    "FLOOR_ENERGY_EFF_SCORE",
    "WINDOWS_ENERGY_EFF_SCORE",
]


feature_dict = {
    "ROOF_UPGRADABILITY": roof_features,
    "WALLS_UPGRADABILITY": walls_features,
    "FLOOR_UPGRADABILITY": floor_features,
}

# drop_features = ['LMK_KEY', 'ADDRESS1', 'ADDRESS2', 'BUILDING_REFERENCE_NUMBER',
#                  'LODGEMENT_DATE', 'LODGEMENT_DATE',
#  #'LIGHTING_COST_POTENTIAL',
#  #'HEATING_COST_POTENTIAL',
#  #'HOT_WATER_COST_POTENTIAL',
#                  'MULTI_GLAZE_PROPORTION', 'GLAZED_TYPE',
#  'GLAZED_AREA',
# 'HOT_WATER_DESCRIPTION',
#  'HOT_WATER_ENERGY_EFF',
#  'FLOOR_DESCRIPTION',
#  'FLOOR_ENERGY_EFF',
#  'WINDOWS_DESCRIPTION',
#  'WINDOWS_ENERGY_EFF', 'SECONDHEAT_DESCRIPTION','MAINHEAT_DESCRIPTION',
#  'MAINHEAT_ENERGY_EFF',
#  'MAINHEATC_ENERGY_EFF',
#  'LIGHTING_DESCRIPTION',
#  'LIGHTING_ENERGY_EFF',
#  'MAIN_FUEL',
# 'UPRN',
#  'HOT_WATER_ENERGY_EFF_SCORE',
#  'FLOOR_ENERGY_EFF_SCORE',
#  'WINDOWS_ENERGY_EFF_SCORE',
#  'MAINHEAT_ENERGY_EFF_SCORE',
#  'MAINHEATC_ENERGY_EFF_SCORE',
#  'LIGHTING_ENERGY_EFF_SCORE',
#                  'BUILDING_ADDRESS_ID',
#                  'HEATING_SYSTEM',
#  'HEATING_FUEL',
#  'HP_INSTALLED',
#  'HP_TYPE',
# 'CURR_ENERGY_RATING_NUM',
#  'ENERGY_RATING_CAT',
# 'original_address',
#  'HP_INSTALL_DATE',
#  'MCS address',
#  'FIRST_HP_MENTION',
#  'ANY_HP',
#  'HP_AT_FIRST',
#  'HP_AT_LAST',
#  'HP_LOST',
#  'HP_ADDED',
#  'HP_IN_THE_MIDDLE',
#  'MCS_AVAILABLE',
#  'HAS_HP_AT_SOME_POINT',
#  'ARTIFICIALLY_DUPL',
#  'EPC HP entry before MCS',
#                  'No EPC HP entry after MCS',
# 'MECHANICAL_VENTILATION',
#                  'CHANGE_WALLS_DESCRIPTION',
#  'UPGRADED_WALLS_DESCRIPTION',
#  'UPGRADABLE_WALLS',
#  'UPGRADABILITY_WALLS',
# 'CHANGE_ROOF_DESCRIPTION',
#  'UPGRADED_ROOF_DESCRIPTION',
#  'UPGRADABLE_ROOF',
#  'UPGRADABILITY_ROOF',
#  'MAINHEAT_EFF_DIFF',
#  # 'WALLS_EFF_DIFF',
#  'CHANGE_MAINHEAT_DESCRIPTION',
#  'UPGRADED_MAINHEAT_DESCRIPTION',
#  'UPGRADABLE_MAINHEAT',
#  'UPGRADABILITY_MAINHEAT',
#  'HOT_WATER_EFF_DIFF',
#  'CHANGE_HOT_WATER_DESCRIPTION',
#  'UPGRADED_HOT_WATER_DESCRIPTION',
#  'UPGRADABLE_HOT_WATER',
#  'UPGRADABILITY_HOT_WATER',
#  'LIGHTING_EFF_DIFF',
#  'CHANGE_LIGHTING_DESCRIPTION',
#  'UPGRADED_LIGHTING_DESCRIPTION',
#  'UPGRADABLE_LIGHTING',
#  'UPGRADABILITY_LIGHTING',
# # 'FLOOR_EFF_DIFF',
#  'CHANGE_FLOOR_DESCRIPTION',
#  'UPGRADED_FLOOR_DESCRIPTION',
#  'UPGRADABLE_FLOOR',
#  'UPGRADABILITY_FLOOR',
# 'WINDOWS_EFF_DIFF',
#  'CHANGE_WINDOWS_DESCRIPTION',
#  'UPGRADED_WINDOWS_DESCRIPTION',
#  'UPGRADABLE_WINDOWS',
#  'UPGRADABILITY_WINDOWS',
#  'UPGRADABILITY_TOTAL',
#  'TOTAL_EFF_DIFF',
#  # "LOCAL_AUTHORITY_LABEL",
# "TRANSACTION_TYPE",
#  "WALLS_ENERGY_EFF",'ANY_UPGRADES',
# 'IMPROVEMENT_ITEM',
#  'IMPROVEMENT_SUMMARY_TEXT',
#  'IMPROVEMENT_DESCR_TEXT',
#  'IMPROVEMENT_ID',
#  'IMPROVEMENT_ID_TEXT',
#  'INDICATIVE_COST',
#  'IMPROVEMENT_CAT',
#  'Unnamed: 85',
#  'Increase loft insulation to 270 mm',
#  #'ROOF_IMPROVEMENT',
#  'Cavity wall insulation',
# # 'WALLS_IMPROVEMENT',
#  'Solid floor insulation',
# # 'FLOOR_IMPROVEMENT',
#  'Replace boiler with new condensing boiler',
#  'HEATING_RECOMMENDATION',
#  'Solar water heating',
#  'HOT_WATER_RECOMMENDATION',
#  'High performance external doors',
#  'Solar photovoltaic panels, 2.5 kWp',
#  'ENERGY_RECOMMENDATION',
#  'Wind turbine',
#  'Flat roof insulation',
#  'Room-in-roof insulation',
#  '50 mm internal or external wall insulation',
#  'Draughtproof single-glazed windows',
#  'WINDOWS_RECOMMENDATION',
#  'Replace single glazed windows with low-E double glazing',
#  'Low energy lighting for all fixed outlets',
#  'LIGHTING_RECOMMENDATION',
#  'Hot water cylinder thermostat',
#  'Floor insulation',
#  'Upgrade heating controls',
#  'Change heating to gas condensing boiler',
#  'Increase hot water cylinder insulation',
#  'Upgrading heating controls',
#  'Suspended floor insulation',
#  'Insulate hot water cylinder with 80 mm jacket',
#  'High heat retention storage heaters',
#  'Flue gas heat recovery device in conjunction with boiler',
#  'Change room heaters to condensing boiler',
#  'Time and temperature zone control',
#  'Replacement glazing units',
# 'ROOF_ENERGY_EFF_NUM',
#  'Add additional 80 mm jacket to hot water cylinder',
#  'Party wall insulation',
#  'Heat recovery system for mixer showers',
#  'Fan assisted storage heaters and dual immersion cylinder',
#  'Fan assisted storage heaters',
#  'Secondary glazing to single glazed windows',
#  'Replace heating unit with condensing unit',
#  'Fan-assisted storage heaters',
#  'High heat retention storage heaters and dual immersion cylinder',
#  'Replace boiler with biomass boiler',
#  'Install condensing boiler',
#  'Replacement warm air unit',
#  'Condensing oil boiler with radiators',
#  'Wood pellet stove with boiler and radiators',
# 'POSTTOWN',
#  'ENERGY_TARIFF',
# 'ROOF_DESCRIPTION',
# 'WALLS_DESCRIPTION', 'INSPECTION_DATE',#'Unnamed: 78',
#                  'RECOMMENDATIONS']


# drop_features = [f for f in drop_features if f not in ['original_address', 'HP_INSTALL_DATE',
#                                                        'MCS address', 'FIRST_HP_MENTION',
#                                                        'ANY_HP', 'HP_AT_FIRST', 'HP_AT_LAST', 'HP_LOST',
#                                                        'HP_ADDED', 'HP_IN_THE_MIDDLE', 'MCS_AVAILABLE',
#                                                        'HAS_HP_AT_SOME_POINT', 'ARTIFICIALLY_DUPL',
#                                                        'EPC HP entry before MCS', 'No EPC HP entry after MCS',
#                                                       'IMPROVEMENT_ITEM', 'IMPROVEMENT_SUMMARY_TEXT',
#                                                        'IMPROVEMENT_DESCR_TEXT', 'IMPROVEMENT_ID', 'IMPROVEMENT_ID_TEXT',
#                                                        'INDICATIVE_COST', 'IMPROVEMENT_CAT','Unnamed: 85',]]

# drop_features = [f for f in drop_features if f not in [['MAINHEAT_RECOMMENDATION', 'HOT_WATER_RECOMMENDATION', 'ENERGY_RECOMMENDATION', 'WINDOWS_RECOMMENDATION',
#                                                         'LIGHTING_RECOMMENDATION', 'Unnamed: 78']]]
# features.drop(columns=drop_features, inplace=True)
